@model ArNir.Core.DTOs.DocumentUpdateDto
@using Microsoft.Extensions.Options
@inject IOptions<ArNir.Core.Config.FileUploadSettings> FileSettings

@{
    ViewData["Title"] = "Edit Document";
    var allowedTypesJson = System.Text.Json.JsonSerializer.Serialize(FileSettings.Value.AllowedTypes);
    var maxFileSize = FileSettings.Value.MaxFileSize;
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Edit Document</h3>
    </div>
    <div class="card-body">
        <form asp-action="Edit" enctype="multipart/form-data" method="post">
            <div class="form-group mb-3">
                <label for="Name">Document Name</label>
                <input type="text" class="form-control" asp-for="Name" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label for="UploadedBy">Uploaded By</label>
                <input type="text" class="form-control" asp-for="UploadedBy" />
                <span asp-validation-for="UploadedBy" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label for="NewFile">Replace File (optional)</label>
                <input type="file" class="form-control" asp-for="NewFile" id="editFileInput" />
                <span asp-validation-for="NewFile" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
            <a asp-action="Index" class="btn btn-secondary">Cancel</a>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const allowedTypes = @Html.Raw(allowedTypesJson);
        const maxSize = @maxFileSize;

        document.getElementById("editFileInput").addEventListener("change", function () {
            const file = this.files[0];
            if (file) {
                if (!allowedTypes.includes(file.type)) {
                    alert(`❌ Invalid file type! Allowed: ${allowedTypes.join(", ")}`);
                    this.value = "";
                    return;
                }
                if (file.size > maxSize) {
                    alert(`❌ File size exceeds ${Math.round(maxSize / 1024 / 1024)} MB!`);
                    this.value = "";
                    return;
                }
            }
        });
    </script>
}
